@echo off
REM Script "Do It All" pour le projet RabbitMQ - Syst√®me de Calcul Distribu√© (Windows)
REM Ce script installe les d√©pendances, v√©rifie les pr√©requis et lance le projet.

echo =====================================================
echo üöÄ Initialisation du Projet RabbitMQ - Calcul Distribu√© üöÄ
echo =====================================================
echo.

REM Fonction pour afficher les messages color√©s (basique)
echo [INFO] D√©marrage de l'installation automatique...
echo.

REM 1. V√©rifier Python et Pip
echo --- ETAPE : V√©rification de Python et Pip ---
python --version >nul 2>&1
if %errorlevel% neq 0 (
    echo [ERREUR] Python n'est pas install√© ou pas dans le PATH.
    echo [INFO] Veuillez installer Python depuis https://python.org
    pause
    exit /b 1
)
echo [INFO] Python trouv√©
python --version

pip --version >nul 2>&1
if %errorlevel% neq 0 (
    python -m pip --version >nul 2>&1
    if %errorlevel% neq 0 (
        echo [ERREUR] Pip n'est pas disponible.
        echo [INFO] Veuillez r√©installer Python avec pip inclus.
        pause
        exit /b 1
    ) else (
        set PIP_CMD=python -m pip
    )
) else (
    set PIP_CMD=pip
)
echo [INFO] Pip trouv√©
%PIP_CMD% --version
echo.

REM 2. Installer les d√©pendances Python
echo --- ETAPE : Installation des d√©pendances Python ---
if not exist "requirements.txt" (
    echo [ERREUR] Le fichier requirements.txt est introuvable.
    echo [INFO] Assurez-vous d'√™tre dans le bon r√©pertoire.
    pause
    exit /b 1
)

echo [INFO] Installation des d√©pendances Python...
%PIP_CMD% install -r requirements.txt
if %errorlevel% neq 0 (
    echo [ERREUR] L'installation des d√©pendances Python a √©chou√©.
    pause
    exit /b 1
)
echo [INFO] D√©pendances Python install√©es avec succ√®s.
echo.

REM 3. V√©rifier Docker
echo --- ETAPE : V√©rification de Docker ---
docker --version >nul 2>&1
if %errorlevel% neq 0 (
    echo [ERREUR] Docker n'est pas install√© ou pas dans le PATH.
    echo [INFO] Veuillez installer Docker Desktop depuis https://docs.docker.com/get-docker/
    pause
    exit /b 1
)
echo [INFO] Docker trouv√©
docker --version

REM V√©rifier si Docker daemon est en cours d'ex√©cution
docker info >nul 2>&1
if %errorlevel% neq 0 (
    echo [ERREUR] Le d√©mon Docker ne semble pas √™tre en cours d'ex√©cution.
    echo [WARN] Veuillez d√©marrer Docker Desktop et relancer le script.
    pause
    exit /b 1
)
echo [INFO] Le d√©mon Docker est actif.
echo.

REM 4. V√©rifier Docker Compose
echo --- ETAPE : V√©rification de Docker Compose ---
docker-compose --version >nul 2>&1
if %errorlevel% equ 0 (
    set DOCKER_COMPOSE_CMD=docker-compose
    echo [INFO] Docker Compose (v1) trouv√©
    docker-compose --version
) else (
    docker compose version >nul 2>&1
    if %errorlevel% equ 0 (
        set DOCKER_COMPOSE_CMD=docker compose
        echo [INFO] Docker Compose (v2 plugin) trouv√©
        docker compose version
    ) else (
        echo [ERREUR] Docker Compose n'est pas install√© (ni v1, ni v2).
        echo [INFO] Instructions : https://docs.docker.com/compose/install/
        pause
        exit /b 1
    )
)
echo.

REM 5. V√©rifier l'existence du fichier docker-compose.yml
echo --- ETAPE : V√©rification du fichier docker-compose.yml ---
if not exist "docker-compose.yml" (
    echo [ERREUR] Le fichier docker-compose.yml est introuvable.
    echo [WARN] Assurez-vous que le fichier est pr√©sent √† la racine du projet.
    pause
    exit /b 1
)
echo [INFO] Fichier docker-compose.yml trouv√©.
echo.

REM 6. Lancer le projet avec Docker Compose
echo --- ETAPE : Lancement du projet avec Docker Compose ---
echo [INFO] Construction des images et d√©marrage des conteneurs...
echo [INFO] Cela peut prendre quelques minutes lors du premier lancement.

%DOCKER_COMPOSE_CMD% up --build -d
if %errorlevel% neq 0 (
    echo [ERREUR] Le d√©marrage avec Docker Compose a √©chou√©.
    echo [WARN] V√©rifiez les messages d'erreur ci-dessus.
    echo [WARN] Vous pouvez essayer de nettoyer les anciens conteneurs/volumes et r√©essayer :
    echo [WARN]   %DOCKER_COMPOSE_CMD% down -v
    pause
    exit /b 1
)
echo [INFO] Le syst√®me a √©t√© d√©marr√© avec succ√®s via Docker Compose.
echo.

REM 7. Afficher les instructions finales
echo --- ETAPE : Instructions finales ---
echo üéâ Le projet RabbitMQ - Calcul Distribu√© est maintenant lanc√© ! üéâ
echo.
echo    üåê Interface Web :            http://localhost:5001
echo    üê∞ RabbitMQ Management :   http://localhost:15672
echo       (Identifiants par d√©faut : admin / admin123)
echo.
echo    Pour voir les logs des conteneurs :
echo       %DOCKER_COMPOSE_CMD% logs -f
echo.
echo    Pour arr√™ter le syst√®me :
echo       %DOCKER_COMPOSE_CMD% down
echo.
echo    Pour arr√™ter et supprimer les volumes (donn√©es RabbitMQ) :
echo       %DOCKER_COMPOSE_CMD% down -v
echo.
echo =====================================================
echo ‚ú® Profitez bien du syst√®me de calcul distribu√© ! ‚ú®
echo =====================================================

pause 